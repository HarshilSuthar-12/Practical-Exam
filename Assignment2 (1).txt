

db.tran.insert({ cr_dr : "D", amount : 100, fee : 2});
db.tran.insert({ cr_dr : "C", amount : 100, fee : 2});
db.tran.insert({ cr_dr : "C", amount : 10, fee : 2});
db.tran.insert({ cr_dr : "D", amount : 100, fee : 4});
db.tran.insert({ cr_dr : "D", amount : 10, fee : 2});
db.tran.insert({ cr_dr : "C", amount : 10, fee : 4});
db.tran.insert({ cr_dr : "D", amount : 100, fee : 2});

	db.tran.aggregate ([
		$group :{_id: '$cr_dr'},
		Count: {$sum : 1},
		{$match : {$Count: {$gt:3} } }
	])

(9) How to get the average amount for Credit and Debit transactions? Eliminate the transactions with less than 100 Rs in amount.
	
	db.tran.aggregate ([
	{$match : {$amount: {$gte:100}} },
	$group :{_id: '$cr_dr'},
	Average : {$avg : {$amount}}
	])


(1) Find cr_dr and total amount (amount + fees) for each transactions
(2) How do you get the number of Debit transactions?
(3) Find number of Debit and number of Credit transactions.
(4) How to get the summation of amount?
(5) How to get the summation of amount and fees?
	db.tran.find({},{Summation: {$sum: {$sum: {$amount,$fee} } } })
(6) How to get the average amount of Debit and credit transactions?
	db.tran.aggregate([
		$group : {_id: $cr_dr},
		Average : {$avg : {$amount}}
	])
	
(7) How to get the total amount for Credit and Debit transactions but not to include the transaction amount less than 50?
	
	select cr_dr, sum(amount) from tran where amount >50 group by  cr_dr
	db.tran.aggregate([
		{$match: {$amount: {$gt:50} } },
		$group : {_id:'$cr_dr'},
		Sum : {$sum : {$amount} }
	])

(8) How to get the total amount for Credit and Debit transactions but not to include the transaction amount less than 50? Eliminate the group(s) if total amount is less than or equal to  100.



	select cr_dr, sum(amount) from tran where amount > 50 
	group by cr_dr having sum(amount) > 100

	db.tran.aggregate ([
		{$match:{$amount :{$gt:50}} },
		$group :{_id:'$cr_dr'},
		Sum : {$sum: {$amount}},
		{$match: {$Sum :{$gt:100} } }
	])

	select count(stdid) from tn



(1) db.tran.find({},{_id:0, cr_dr:1, totalAmount : {$sum : ['$amount', '$fee']} })

(7) db.tran.aggregate(
{"$match":{"amount": {"$gt": 50}}},
{"$group":{"_id":"$cr_dr", 
		"totalAmount":{$sum: '$amount'}
	}
}
)


(8)
db.tran.aggregate([
{"$match":{"amount": {"$gt": 50}}},
{"$group":{"_id":"$cr_dr", 
		"totalAmount":{$sum: '$amount'}
	}
},
{"$match":{totalAmount: {"$gt": 100}}}
]
)

